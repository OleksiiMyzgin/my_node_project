{"version":3,"sources":["../../data/load-sample-data.js"],"names":["console","log","Store","remove","Review","User","process","exit","deleteData","insertMany","stores","reviews","users","loadData","require","config","path","__dirname","fs","mongoose","connect","env","DATABASE","Promise","global","JSON","parse","readFileSync","argv","includes"],"mappings":";;;qEAiBA;AAAA;AAAA;AAAA;AAAA;AACEA,oBAAQC,GAAR,CAAY,sBAAZ;AADF;AAAA,mBAEQC,MAAMC,MAAN,EAFR;;AAAA;AAAA;AAAA,mBAGQC,OAAOD,MAAP,EAHR;;AAAA;AAAA;AAAA,mBAIQE,KAAKF,MAAL,EAJR;;AAAA;AAKEH,oBAAQC,GAAR,CAAY,iEAAZ;AACAK,oBAAQC,IAAR;;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,U;;;;;;sEASf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEUN,MAAMO,UAAN,CAAiBC,MAAjB,CAFV;;AAAA;AAAA;AAAA,mBAGUN,OAAOK,UAAP,CAAkBE,OAAlB,CAHV;;AAAA;AAAA;AAAA,mBAIUN,KAAKI,UAAL,CAAgBG,KAAhB,CAJV;;AAAA;AAKIZ,oBAAQC,GAAR,CAAY,wBAAZ;AACAK,oBAAQC,IAAR;AANJ;AAAA;;AAAA;AAAA;AAAA;;AAQIP,oBAAQC,GAAR,CAAY,8KAAZ;AACAD,oBAAQC,GAAR;AACAK,oBAAQC,IAAR;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeM,Q;;;;;;;AA1BfC,QAAQ,QAAR,EAAkBC,MAAlB,CAAyB,EAAEC,MAAMC,YAAY,mBAApB,EAAzB;AACA,IAAMC,KAAKJ,QAAQ,IAAR,CAAX;;AAEA,IAAMK,WAAWL,QAAQ,UAAR,CAAjB;AACAK,SAASC,OAAT,CAAiBd,QAAQe,GAAR,CAAYC,QAA7B;AACAH,SAASI,OAAT,GAAmBC,OAAOD,OAA1B,C,CAAmC;;AAEnC;AACA,IAAMrB,QAAQY,QAAQ,iBAAR,CAAd;AACA,IAAMV,SAASU,QAAQ,kBAAR,CAAf;AACA,IAAMT,OAAOS,QAAQ,gBAAR,CAAb;;AAGA,IAAMJ,SAASe,KAAKC,KAAL,CAAWR,GAAGS,YAAH,CAAgBV,YAAY,cAA5B,EAA4C,OAA5C,CAAX,CAAf;AACA,IAAMN,UAAUc,KAAKC,KAAL,CAAWR,GAAGS,YAAH,CAAgBV,YAAY,eAA5B,EAA6C,OAA7C,CAAX,CAAhB;AACA,IAAML,QAAQa,KAAKC,KAAL,CAAWR,GAAGS,YAAH,CAAgBV,YAAY,aAA5B,EAA2C,OAA3C,CAAX,CAAd;;AAwBA,IAAIX,QAAQsB,IAAR,CAAaC,QAAb,CAAsB,UAAtB,CAAJ,EAAuC;AACrCrB;AACD,CAFD,MAEO;AACLK;AACD","file":"load-sample-data.js","sourcesContent":["require('dotenv').config({ path: __dirname + '/../variables.env' });\nconst fs = require('fs');\n\nconst mongoose = require('mongoose');\nmongoose.connect(process.env.DATABASE);\nmongoose.Promise = global.Promise; // Tell Mongoose to use ES6 promises\n\n// import all of our models - they need to be imported only once\nconst Store = require('../models/Store');\nconst Review = require('../models/Review');\nconst User = require('../models/User');\n\n\nconst stores = JSON.parse(fs.readFileSync(__dirname + '/stores.json', 'utf-8'));\nconst reviews = JSON.parse(fs.readFileSync(__dirname + '/reviews.json', 'utf-8'));\nconst users = JSON.parse(fs.readFileSync(__dirname + '/users.json', 'utf-8'));\n\nasync function deleteData() {\n  console.log('üò¢üò¢ Goodbye Data...');\n  await Store.remove();\n  await Review.remove();\n  await User.remove();\n  console.log('Data Deleted. To load sample data, run\\n\\n\\t npm run sample\\n\\n');\n  process.exit();\n}\n\nasync function loadData() {\n  try {\n    await Store.insertMany(stores);\n    await Review.insertMany(reviews);\n    await User.insertMany(users);\n    console.log('üëçüëçüëçüëçüëçüëçüëçüëç Done!');\n    process.exit();\n  } catch(e) {\n    console.log('\\nüëéüëéüëéüëéüëéüëéüëéüëé Error! The Error info is below but if you are importing sample data make sure to drop the existing database first with.\\n\\n\\t npm run blowitallaway\\n\\n\\n');\n    console.log(e);\n    process.exit();\n  }\n}\nif (process.argv.includes('--delete')) {\n  deleteData();\n} else {\n  loadData();\n}\n"]}